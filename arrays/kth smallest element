class Solution{
    public:
    // arr : given array
    // l : starting index of the array i.e 0
    // r : ending index of the array i.e size-1
    // k : find kth smallest element and return using this function
    
    // method 1: using sort function
    // int kthSmallest(int arr[], int l, int r, int k) {
    //     sort(arr,arr+r+1);
    //     return arr[k-1];
    // sort function have complexity around O(NlogN)
    
    // method 2: using priority queue from STL
    int kthSmallest(int arr[], int l, int r, int k) {
        priority_queue<long long,vector<long long>,greater<int>> q;
        for(int i=l;i<=r;i++)
        {
            q.push(arr[i]);
        }
        for(int i=0;i<k-1;i++)
        {
            q.pop();
        }
        return q.top();
    }
};